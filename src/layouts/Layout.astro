---
import '@/styles/globals.css';
import '@/styles/brand-dark.css';
import Footer from '@/components/Footer.astro';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "TecnoJuy - Plataforma educativa moderna" } = Astro.props;
---

<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Fuentes -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link 
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&family=JetBrains+Mono:wght@400;500;600&display=swap" 
      rel="stylesheet" 
    />
    
    <!-- Meta tags para SEO -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    
    <title>{title}</title>

    <script>
      // SCRIPT DE LIMPIEZA AGRESIVA PARA MIXED CONTENT
      // Este script realiza una limpieza completa del navegador
      
      const FORCE_CLEANUP = true; // Activar limpieza forzada
      const CLEANUP_VERSION = '2024-09-24-v3'; // Incrementar para forzar nueva limpieza
      
      if (FORCE_CLEANUP && typeof window !== 'undefined') {
        console.log('üßπ INICIANDO LIMPIEZA AGRESIVA DEL NAVEGADOR...');
        
        // 1. Verificar si ya se hizo la limpieza
        const lastCleanup = localStorage.getItem('sw_cleanup_version');
        if (lastCleanup !== CLEANUP_VERSION) {
          console.log('üî• Versi√≥n de limpieza nueva detectada. Ejecutando limpieza completa...');
          
          // 2. Limpiar Service Workers
          if ('serviceWorker' in navigator) {
            navigator.serviceWorker.getRegistrations().then(registrations => {
              if (registrations.length > 0) {
                console.log(`üßπ Eliminando ${registrations.length} Service Workers...`);
                registrations.forEach(reg => {
                  reg.unregister().then(() => {
                    console.log(`‚úÖ SW eliminado: ${reg.scope}`);
                  });
                });
              }
            });
          }
          
          // 3. Limpiar todos los caches de la API Cache
          if ('caches' in window) {
            caches.keys().then(cacheNames => {
              console.log(`üßπ Eliminando ${cacheNames.length} caches...`);
              cacheNames.forEach(cacheName => {
                caches.delete(cacheName).then(() => {
                  console.log(`‚úÖ Cache eliminado: ${cacheName}`);
                });
              });
            });
          }
          
          // 4. Limpiar localStorage y sessionStorage
          try {
            console.log('üßπ Limpiando storage local...');
            localStorage.clear();
            sessionStorage.clear();
            
            // 5. Marcar que se hizo la limpieza
            localStorage.setItem('sw_cleanup_version', CLEANUP_VERSION);
            
            // 6. Forzar recarga completa despu√©s de un breve delay
            setTimeout(() => {
              console.log('üîÑ FORZANDO RECARGA COMPLETA...');
              window.location.reload(true); // Hard reload
            }, 1000);
            
          } catch (e) {
            console.error('‚ùå Error durante la limpieza:', e);
          }
        } else {
          console.log('‚úÖ Limpieza ya realizada para esta versi√≥n.');
        }
      }
      
      // INTERCEPTOR DE FETCH PARA FORZAR HTTPS - VERSION AGRESIVA
      // Este c√≥digo intercepta TODA funci√≥n de red del navegador
      if (typeof window !== 'undefined') {
        console.log('üîí Instalando interceptores de red agresivos...');
        
        // Interceptor de fetch (ya existente, mejorado)
        if (window.fetch) {
          const originalFetch = window.fetch;
          window.fetch = function(resource, config) {
            console.log('üåê FETCH llamado con:', resource);
            
            if (typeof resource === 'string' && resource.includes('backend-tecnojuy2-production.up.railway.app')) {
              if (resource.startsWith('http://')) {
                const correctedUrl = resource.replace('http://', 'https://');
                console.log(`üîí FETCH CORREGIDO: ${resource} -> ${correctedUrl}`);
                resource = correctedUrl;
              }
            }
            
            return originalFetch.call(this, resource, config);
          };
        }
        
        // Interceptor de XMLHttpRequest
        if (window.XMLHttpRequest) {
          const OriginalXHR = window.XMLHttpRequest;
          window.XMLHttpRequest = function() {
            const xhr = new OriginalXHR();
            const originalOpen = xhr.open;
            
            xhr.open = function(method, url, async, user, password) {
              console.log('üåê XHR llamado con:', url);
              
              if (typeof url === 'string' && url.includes('backend-tecnojuy2-production.up.railway.app')) {
                if (url.startsWith('http://')) {
                  url = url.replace('http://', 'https://');
                  console.log(`üîí XHR CORREGIDO: ${url}`);
                }
              }
              
              return originalOpen.call(this, method, url, async, user, password);
            };
            
            return xhr;
          };
        }
        
        console.log('üîí Todos los interceptores de red instalados');
      }
    </script>
  </head>
  <body class="antialiased transition-colors" style="background-color: var(--bg-secondary);">
    <main class="min-h-screen">
      <slot />
    </main>
    <Footer />
  </body>
</html>


